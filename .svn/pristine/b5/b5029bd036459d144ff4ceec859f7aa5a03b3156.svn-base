package org.SOC.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.SOC.domain.Criteria;
import org.SOC.domain.PageMaker;
import org.SOC.dto.CommDTO;
import org.SOC.service.CommService;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/replies")
public class CommController {

  @Inject
  private CommService commservice;
  
  @RequestMapping(value = "", method = RequestMethod.POST)	//create
  public ResponseEntity<String> create(@RequestBody CommDTO CTO) {

    ResponseEntity<String> entity = null;
    try {
    	commservice.createComm(CTO);
      entity = new ResponseEntity<String>("SUCCESS", HttpStatus.OK);
    } catch (Exception e) {
      e.printStackTrace();
      entity = new ResponseEntity<String>(e.getMessage(), HttpStatus.BAD_REQUEST);
    }
    return entity;
  }

  @RequestMapping(value = "/all{bno}", method = RequestMethod.GET)	// listall
  public ResponseEntity<List<CommDTO>> listAll(@PathVariable("postno") Integer postno) {

    ResponseEntity<List<CommDTO>> entity = null;
    try {
      entity = new ResponseEntity<>(commservice.listComm(postno), HttpStatus.OK);

    } catch (Exception e) {
      e.printStackTrace();
      entity = new ResponseEntity<>(HttpStatus.BAD_REQUEST);
    }

    return entity;
  }

  @RequestMapping(value = "/{commno}", method = { RequestMethod.PUT, RequestMethod.PATCH })	//modify
  public ResponseEntity<String> update(@PathVariable("commno") Integer commno, @RequestBody CommDTO CTO) {

    ResponseEntity<String> entity = null;
    try {
      CTO.setPostno(commno);
      commservice.modifyComm(CTO);

      entity = new ResponseEntity<String>("SUCCESS", HttpStatus.OK);
    } catch (Exception e) {
      e.printStackTrace();
      entity = new ResponseEntity<String>(e.getMessage(), HttpStatus.BAD_REQUEST);
    }
    return entity;
  }

  @RequestMapping(value = "/{commno}", method = RequestMethod.DELETE)	//delete
  public ResponseEntity<String> remove(@PathVariable("commno") Integer commno) {

    ResponseEntity<String> entity = null;
    try {
    	commservice.removeComm(commno);
      entity = new ResponseEntity<String>("SUCCESS", HttpStatus.OK);
    } catch (Exception e) {
      e.printStackTrace();
      entity = new ResponseEntity<>(e.getMessage(), HttpStatus.BAD_REQUEST);
    }
    return entity;
  }

	
	
	/*
	 * @RequestMapping(value = "/{postno}/{page}", method = RequestMethod.GET)
	 * public ResponseEntity<Map<String, Object>> listPage(
	 * 
	 * @PathVariable("postno") int postno,
	 * 
	 * @PathVariable("page") Integer page) {
	 * 
	 * ResponseEntity<Map<String, Object>> entity = null;
	 * 
	 * try { Criteria cri = new Criteria(); cri.setPage(page);
	 * 
	 * PageMaker pageMaker = new PageMaker(); pageMaker.setCri(cri);
	 * 
	 * Map<String, Object> map = new HashMap<String, Object>(); List<CommDTO> list =
	 * commservice.listReplyPage(postno, cri);
	 * 
	 * map.put("list", list);
	 * 
	 * int replyCount = commservice.count(postno);
	 * pageMaker.setTotalCount(replyCount);
	 * 
	 * map.put("pageMaker", pageMaker);
	 * 
	 * entity = new ResponseEntity<Map<String, Object>>(map, HttpStatus.OK);
	 * 
	 * } catch (Exception e) { e.printStackTrace(); entity = new
	 * ResponseEntity<Map<String, Object>>(HttpStatus.BAD_REQUEST); }
	 * 
	 * return entity; }
	 */
	 
	 

}
